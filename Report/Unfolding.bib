@article{bernUnunfoldablePolyhedraConvex2003,
  title = {Ununfoldable Polyhedra with Convex Faces},
  author = {Bern, Marshall and Demaine, Erik D. and Eppstein, David and Kuo, Eric and Mantler, Andrea and Snoeyink, Jack},
  year = {2003},
  month = feb,
  journal = {Computational Geometry},
  series = {Special {{Issue}} on the {{Fourth CGC Workshop}} on {{Computational Geometry}}},
  volume = {24},
  number = {2},
  pages = {51--62},
  issn = {0925-7721},
  doi = {10.1016/S0925-7721(02)00091-3},
  urldate = {2025-02-27},
  abstract = {Unfolding a convex polyhedron into a simple planar polygon is a well-studied problem. In this paper, we study the limits of unfoldability by studying nonconvex polyhedra with the same combinatorial structure as convex polyhedra. In particular, we give two examples of polyhedra, one with 24 convex faces and one with 36 triangular faces, that cannot be unfolded by cutting along edges. We further show that such a polyhedron can indeed be unfolded if cuts are allowed to cross faces. Finally, we prove that ``open'' polyhedra with triangular faces may not be unfoldable no matter how they are cut.},
  keywords = {Discrete geometry,Nets,Unfolding polyhedra},
  file = {C\:\\Users\\Gamazone\\Zotero\\storage\\2H7DP364\\Bern et al. - 2003 - Ununfoldable polyhedra with convex faces.pdf;C\:\\Users\\Gamazone\\Zotero\\storage\\PS5IAFKN\\S0925772102000913.html}
}

@book{demaineGeometricFoldingAlgorithms2007,
  title = {Geometric Folding Algorithms: Linkages, Origami, Polyhedra},
  shorttitle = {Geometric Folding Algorithms},
  author = {Demaine, Erik D. and O'Rourke, Joseph},
  year = {2007},
  publisher = {Cambridge university press},
  address = {Cambridge},
  isbn = {978-0-521-85757-4},
  langid = {english},
  lccn = {516.15},
  file = {C:\Users\Gamazone\Zotero\storage\5TBZ7GE5\Demaine and O'Rourke - 2007 - Geometric folding algorithms linkages, origami, polyhedra.pdf}
}

@article{ghomiAffineUnfoldingsConvex2014,
  title = {Affine Unfoldings of Convex Polyhedra},
  author = {Ghomi, Mohammad},
  year = {2014},
  month = dec,
  journal = {Geometry \& Topology},
  volume = {18},
  number = {5},
  eprint = {1305.3231},
  primaryclass = {math},
  pages = {3055--3090},
  issn = {1364-0380, 1465-3060},
  doi = {10.2140/gt.2014.18.3055},
  urldate = {2025-02-27},
  abstract = {We show that every convex polyhedron admits a simple edge unfolding after an affine transformation. In particular there exists no combinatorial obstruction to a positive resolution of Durer's unfoldability problem, which answers a question of Croft, Falconer, and Guy. Among other techniques, the proof employs a topological characterization for embeddings among the planar immersions of the disk.},
  archiveprefix = {arXiv},
  keywords = {Mathematics - Combinatorics,Mathematics - Geometric Topology,Mathematics - Metric Geometry},
  file = {C\:\\Users\\Gamazone\\Zotero\\storage\\9CF4SCRJ\\Ghomi - 2014 - Affine unfoldings of convex polyhedra.pdf;C\:\\Users\\Gamazone\\Zotero\\storage\\6B2JW7UZ\\1305.html}
}

@article{ghomiDurersUnfoldingProblem2018,
  title = {D{\"u}rer's {{Unfolding Problem}} for {{Convex Polyhedra}}},
  author = {Ghomi, Mohammad},
  year = {2018},
  month = jan,
  journal = {Notices of the American Mathematical Society},
  volume = {65},
  number = {01},
  pages = {25--27},
  issn = {0002-9920, 1088-9477},
  doi = {10.1090/noti1609},
  urldate = {2025-02-27},
  langid = {english},
  file = {C:\Users\Gamazone\Zotero\storage\CFLKS3RX\Ghomi - 2018 - DÃ¼rer's Unfolding Problem for Convex Polyhedra.pdf}
}

@article{lucierUnfoldingReconstructingPolyhedra2006,
  title = {Unfolding and {{Reconstructing Polyhedra}}},
  author = {Lucier, Brendan},
  year = {2006},
  publisher = {University of Waterloo},
  urldate = {2025-02-27},
  abstract = {This thesis covers work on two topics: unfolding polyhedra into the plane and reconstructing polyhedra from partial information. For each topic, we describe previous work in the area and present an array of new research and results. Our work on unfolding is motivated by the problem of characterizing precisely when overlaps will occur when a polyhedron is cut along edges and unfolded. By contrast to previous work, we begin by classifying overlaps according to a notion of locality. This classification enables us to focus upon particular types of overlaps, and use the results to construct examples of polyhedra with interesting unfolding properties. The research on unfolding is split into convex and non-convex cases. In the non-convex case, we construct a polyhedron for which every edge unfolding has an overlap, with fewer faces than all previously known examples. We also construct a non-convex polyhedron for which every edge unfolding has a particularly trivial type of overlap. In the convex case, we construct a series of example polyhedra for which every unfolding of various types has an overlap. These examples disprove some existing conjectures regarding algorithms to unfold convex polyhedra without overlaps. The work on reconstruction is centered around analyzing the computational complexity of a number of reconstruction questions. We consider two classes of reconstruction problems. The first problem is as follows: given a collection of edges in space, determine whether they can be rearranged {$<$}em{$>$}by translation only{$<$}/em{$>$} to form a polygon or polyhedron. We consider variants of this problem by introducing restrictions like convexity, orthogonality, and non-degeneracy. All of these problems are NP-complete, though some are proved to be only weakly NP-complete. We then consider a second, more classical problem: given a collection of edges in space, determine whether they can be rearranged by {$<$}em{$>$}translation and/or rotation{$<$}/em{$>$} to form a polygon or polyhedron. This problem is NP-complete for orthogonal polygons, but polynomial algorithms exist for non-orthogonal polygons. For polyhedra, it is shown that if degeneracies are allowed then the problem is NP-hard, but the complexity is still unknown for non-degenerate polyhedra.},
  langid = {english},
  file = {C:\Users\Gamazone\Zotero\storage\XDCN3DVX\Lucier - 2006 - Unfolding and Reconstructing Polyhedra.pdf}
}

@misc{lzawLZawUnfolding2025,
  title = {{{LZaw}}/{{Unfolding}}},
  author = {LZaw},
  year = {2025},
  month = mar,
  urldate = {2025-03-21}
}

@article{schlickenriederNetsPolyhedra,
  title = {Nets of {{Polyhedra}}},
  author = {Schlickenrieder, Wolfram},
  file = {C:\Users\Gamazone\Zotero\storage\F28UAZKD\Schlickenrieder - Nets of Polyhedra.pdf}
}

@article{xiLearningSegmentUnfold2016,
  title = {Learning to Segment and Unfold Polyhedral Mesh from Failures},
  author = {Xi, Zhonghua and Kim, Yun-hyeong and Kim, Young J. and Lien, Jyh-Ming},
  year = {2016},
  month = aug,
  journal = {Computers \& Graphics},
  series = {Shape {{Modeling International}} 2016},
  volume = {58},
  pages = {139--149},
  issn = {0097-8493},
  doi = {10.1016/j.cag.2016.05.022},
  urldate = {2025-02-27},
  abstract = {Folding planar sheets to make 3D shapes from is an ancient practice with many new applications, ranging from personal fabrication of customized items to design of surgical instruments for minimally invasive surgery in self-folding machines. Given a polyhedral mesh, unfolding is an operation of cutting and flattening the mesh. The flattened polyhedral nets are then cut out of planar materials and folded back to 3D. Unfolding a polyhedral mesh into planar nets usually require segmentation. Either used as a preprocessing step to simplify the mesh and provide semantics or as the result of unfolding to avoid overlapping, the segmentation and the unfolding operations are decoupled. Consequently, segmented components may not be unfoldable and unfolded nets usually provide no semantic meaning and make folding difficult. In this paper, we propose a strategy that tightly couples unfolding and segmentation. We show that the proposed method produces unfoldable segmentation that resembles carefully designed paper craft. The key idea that enables this capability is an algorithm that learns from failed unfoldings.},
  keywords = {Folding,Mesh processing,Paper craft,Segmentation,Shape analysis,Unfolding},
  file = {C\:\\Users\\Gamazone\\Zotero\\storage\\M4EYTECI\\Xi et al. - 2016 - Learning to segment and unfold polyhedral mesh from failures.pdf;C\:\\Users\\Gamazone\\Zotero\\storage\\SSJ84GQ2\\S0097849316300656.html}
}

@article{zawallichUnfoldingMeshApproximation2024,
  title = {Unfolding via {{Mesh Approximation}} Using {{Surface Flows}}},
  author = {Zawallich, Lars and Pajarola, Renato},
  year = {2024},
  journal = {Computer Graphics Forum},
  volume = {43},
  number = {2},
  pages = {e15031},
  issn = {1467-8659},
  doi = {10.1111/cgf.15031},
  urldate = {2025-03-20},
  abstract = {Manufacturing a 3D object by folding from a 2D material is typically done in four steps: 3D surface approximation, unfolding the surface into a plane, printing and cutting the outline of the unfolded shape, and refolding it to a 3D object. Usually, these steps are treated separately from each other. In this work we jointly address the first two pipeline steps by allowing the 3D representation to smoothly change while unfolding. This way, we increase the chances to overcome possible ununfoldability issues. To join the two pipeline steps, our work proposes and combines different surface flows with a Tabu Unfolder. We empirically investigate the effects that different surface flows have on the performance as well as on the quality of the unfoldings. Additionally, we demonstrate the ability to solve cases by approximation which comparable algorithms either have to segment or can not solve at all.},
  langid = {english},
  keywords = {Applied computing  Computer-aided manufacturing,CCS Concepts,Computing methodologies  Mesh geometry models},
  file = {C:\Users\Gamazone\Zotero\storage\6SE6X6P5\cgf.html}
}

@article{zawallichUnfoldingPolyhedraTabu2025,
  title = {Unfolding Polyhedra via Tabu Search},
  author = {Zawallich, Lars},
  year = {2025},
  month = jan,
  journal = {The Visual Computer},
  volume = {41},
  number = {2},
  pages = {1141--1154},
  issn = {1432-2315},
  doi = {10.1007/s00371-024-03395-2},
  urldate = {2025-02-27},
  abstract = {Folding a discrete geometry from a flat sheet of material is one way to construct a 3D object. A typical creation pipeline first designs the 3D object, unfolds it, prints and cuts the unfold pattern from a 2D material, and then refolds the object. Within this work we focus on the unfold part of this pipeline. Most current unfolding approaches segment the input, which has structural downsides for the refolded result. Therefore, we are aiming to unfold the input into a single-patched pattern. Our algorithm applies tabu search to the topic of unfolding. We show empirically that our algorithm is faster and more reliable than other methods unfolding into single-patched unfold patterns. Moreover, our algorithm can handle any sort of flat polygon as faces, while comparable methods are bound to triangles.},
  langid = {english},
  keywords = {Artificial Intelligence,Computational Geometry,Discrete Optimization,Papercraft,Unfolding},
  file = {C:\Users\Gamazone\Zotero\storage\GX4L3RLN\Zawallich - 2025 - Unfolding polyhedra via tabu search.pdf}
}

@misc{zawallichUnfoldingProgressiveMesh2024,
  title = {Unfolding via {{Progressive Mesh Approximation}}},
  author = {Zawallich, Lars and Pajarola, Renato},
  year = {2024},
  month = may,
  number = {arXiv:2405.07922},
  eprint = {2405.07922},
  primaryclass = {cs},
  publisher = {arXiv},
  doi = {10.48550/arXiv.2405.07922},
  urldate = {2025-03-20},
  abstract = {When folding a 3D object from a 2D material like paper, typically only an approximation of the original surface geometry is needed. Such an approximation can effectively be created by a (progressive) mesh simplification approach, e.g. using an edge collapse technique. Moreover, when searching for an unfolding of the object, this approximation is assumed to be fixed. In this work, we take a different route and allow the approximation to change while searching for an unfolding. This way, we increase the chances to overcome possible ununfoldability issues. To join the two concepts of mesh approximation and unfolding, our work combines the edge collapsing mesh simplification technique with a Tabu Unfolder, a robust mesh unfolding approach. We empirically show that this strategy performs faster and that it is more reliable than prior state of the art methods.},
  archiveprefix = {arXiv},
  keywords = {Computer Science - Graphics},
  file = {C\:\\Users\\Gamazone\\Zotero\\storage\\WN9AJBIC\\Zawallich and Pajarola - 2024 - Unfolding via Progressive Mesh Approximation.pdf;C\:\\Users\\Gamazone\\Zotero\\storage\\VIAZRSLG\\2405.html}
}
